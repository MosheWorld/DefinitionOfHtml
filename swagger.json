{
  "openapi": "3.0.0",
  "info": {
    "title": "Expanded Demo API",
    "description": "A richer API spec for testing endpoints, authentication, pagination, filtering, and more.",
    "version": "1.1.0",
    "contact": {
      "name": "API Support",
      "email": "support@example.com",
      "url": "https://example.com/support"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "https://api.example.com/v1",
      "description": "Production server"
    },
    {
      "url": "https://staging-api.example.com/v1",
      "description": "Staging server"
    }
  ],
  "tags": [
    { "name": "Auth", "description": "Authentication and authorization" },
    { "name": "Users", "description": "User management" },
    { "name": "Posts", "description": "Blog post operations" },
    { "name": "Groups", "description": "User group management" }
  ],
  "paths": {
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "operationId": "loginUser",
        "summary": "Log in a user",
        "description": "Authenticates a user and returns a JWT token.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AuthRequest" },
              "example": {
                "username": "johndoe",
                "password": "s3cret!"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Authentication successful",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AuthResponse" },
                "example": {
                  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
                  "expiresIn": 3600
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "operationId": "logoutUser",
        "summary": "Log out a user",
        "description": "Invalidates the current JWT token.",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "204": {
            "description": "Logged out successfully"
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": ["Users"],
        "operationId": "listUsers",
        "summary": "List users",
        "parameters": [
          { "$ref": "#/components/parameters/PageParam" },
          { "$ref": "#/components/parameters/LimitParam" },
          { "$ref": "#/components/parameters/XRequestId" }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "page": { "type": "integer" },
                    "limit": { "type": "integer" },
                    "items": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/User" }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      },
      "post": {
        "tags": ["Users"],
        "operationId": "createUser",
        "summary": "Create user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/NewUser" },
              "example": {
                "name": "Alice",
                "email": "alice@example.com",
                "password": "p@ssw0rd"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/User" }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/users/{userId}": {
      "parameters": [
        {
          "name": "userId",
          "in": "path",
          "required": true,
          "schema": { "type": "string", "format": "uuid" },
          "description": "UUID of the user"
        }
      ],
      "get": {
        "tags": ["Users"],
        "operationId": "getUserById",
        "summary": "Get user by ID",
        "responses": {
          "200": {
            "description": "A single user",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/User" }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      },
      "put": {
        "tags": ["Users"],
        "operationId": "replaceUserById",
        "summary": "Replace user by ID",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/NewUser" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User replaced",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/User" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      },
      "patch": {
        "tags": ["Users"],
        "operationId": "updateUserById",
        "summary": "Update user by ID",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateUser" },
              "examples": {
                "changeEmail": {
                  "value": { "email": "new.email@example.com" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/User" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      },
      "delete": {
        "tags": ["Users"],
        "operationId": "deleteUserById",
        "summary": "Delete user by ID",
        "responses": {
          "204": { "description": "User deleted" },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/users/{userId}/posts": {
      "get": {
        "tags": ["Posts"],
        "operationId": "listPostsByUser",
        "summary": "List posts by user",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid" }
          },
          { "$ref": "#/components/parameters/PageParam" },
          { "$ref": "#/components/parameters/LimitParam" }
        ],
        "responses": {
          "200": {
            "description": "Paginated posts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Post" }
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      },
      "post": {
        "tags": ["Posts"],
        "operationId": "createPostForUser",
        "summary": "Create post for user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/NewPost" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Post created",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Post" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/posts": {
      "get": {
        "tags": ["Posts"],
        "operationId": "listAllPosts",
        "summary": "List all posts",
        "parameters": [
          { "$ref": "#/components/parameters/PageParam" },
          { "$ref": "#/components/parameters/LimitParam" },
          {
            "name": "tag",
            "in": "query",
            "schema": { "type": "string" },
            "description": "Filter by tag"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of posts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Post" }
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      },
      "post": {
        "tags": ["Posts"],
        "operationId": "createPost",
        "summary": "Create a post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/NewPost" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Post created",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Post" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/posts/{postId}": {
      "parameters": [
        {
          "name": "postId",
          "in": "path",
          "required": true,
          "schema": { "type": "string", "format": "uuid" }
        }
      ],
      "get": {
        "tags": ["Posts"],
        "operationId": "getPostById",
        "summary": "Get post by ID",
        "responses": {
          "200": {
            "description": "A single post",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Post" }
              }
            }
          },
          "404": {
            "description": "Post not found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      },
      "put": {
        "tags": ["Posts"],
        "operationId": "replacePostById",
        "summary": "Replace post by ID",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/NewPost" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Post replaced",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Post" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      },
      "delete": {
        "tags": ["Posts"],
        "operationId": "deletePostById",
        "summary": "Delete post by ID",
        "responses": {
          "204": { "description": "Post deleted" },
          "404": {
            "description": "Post not found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/groups": {
      "get": {
        "tags": ["Groups"],
        "operationId": "listGroups",
        "summary": "List user groups",
        "responses": {
          "200": {
            "description": "An array of groups",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Group" }
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      },
      "post": {
        "tags": ["Groups"],
        "operationId": "createGroup",
        "summary": "Create a new group",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/NewGroup" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Group created",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Group" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/groups/{groupId}": {
      "parameters": [
        {
          "name": "groupId",
          "in": "path",
          "required": true,
          "schema": { "type": "string", "format": "uuid" }
        }
      ],
      "get": {
        "tags": ["Groups"],
        "operationId": "getGroupById",
        "summary": "Get group details",
        "responses": {
          "200": {
            "description": "A single group",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Group" }
              }
            }
          },
          "404": {
            "description": "Group not found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      },
      "patch": {
        "tags": ["Groups"],
        "operationId": "updateGroupById",
        "summary": "Update group",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateGroup" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Group updated",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Group" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      },
      "delete": {
        "tags": ["Groups"],
        "operationId": "deleteGroupById",
        "summary": "Delete group",
        "responses": {
          "204": { "description": "Group deleted" },
          "404": {
            "description": "Group not found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    }
  },
  "components": {
    "parameters": {
      "PageParam": {
        "name": "page",
        "in": "query",
        "schema": { "type": "integer", "default": 1 },
        "description": "Page number"
      },
      "LimitParam": {
        "name": "limit",
        "in": "query",
        "schema": { "type": "integer", "default": 25 },
        "description": "Items per page"
      },
      "XRequestId": {
        "name": "X-Request-ID",
        "in": "header",
        "schema": { "type": "string" },
        "description": "Client-provided request ID for tracing"
      }
    },
    "schemas": {
      "AuthRequest": {
        "type": "object",
        "required": ["username", "password"],
        "properties": {
          "username": { "type": "string" },
          "password": { "type": "string", "format": "password" }
        }
      },
      "AuthResponse": {
        "type": "object",
        "properties": {
          "token": { "type": "string" },
          "expiresIn": { "type": "integer" }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "code": { "type": "integer" },
          "message": { "type": "string" }
        }
      },
      "User": {
        "type": "object",
        "required": ["id", "name", "email"],
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "name": { "type": "string" },
          "email": { "type": "string", "format": "email" }
        }
      },
      "NewUser": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": { "type": "string" },
          "email": { "type": "string", "format": "email" },
          "password": { "type": "string", "format": "password" }
        }
      },
      "UpdateUser": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "email": { "type": "string", "format": "email" }
        }
      },
      "Post": {
        "type": "object",
        "required": ["id", "authorId", "title", "content"],
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "authorId": { "type": "string", "format": "uuid" },
          "title": { "type": "string" },
          "content": { "type": "string" },
          "tags": {
            "type": "array",
            "items": { "type": "string" }
          },
          "createdAt": { "type": "string", "format": "date-time" }
        }
      },
      "NewPost": {
        "type": "object",
        "required": ["title", "content"],
        "properties": {
          "title": { "type": "string" },
          "content": { "type": "string" },
          "tags": {
            "type": "array",
            "items": { "type": "string" }
          }
        }
      },
      "Group": {
        "type": "object",
        "required": ["id", "name"],
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "name": { "type": "string" },
          "memberIds": {
            "type": "array",
            "items": { "type": "string", "format": "uuid" }
          }
        }
      },
      "NewGroup": {
        "type": "object",
        "required": ["name"],
        "properties": {
          "name": { "type": "string" }
        }
      },
      "UpdateGroup": {
        "type": "object",
        "properties": {
          "name": { "type": "string" }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "apiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-Key"
      }
    }
  }
}
